<UserControl x:Class="SimpleTrader.WPF.Controls.NavigationBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SimpleTrader.WPF.Controls"
             xmlns:nav="clr-namespace:SimpleTrader.WPF.State.Navigators"
             xmlns:converters="clr-namespace:SimpleTrader.WPF.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" 
             d:DesignWidth="800">

    <UserControl.Resources>
        <converters:EqualValueToParameterConverter x:Key="EqualValueToParameterConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0"
              Background="{StaticResource BrushPrimary1}">

            <TextBlock Text="Simple Trader"
                      Padding="15"
                      HorizontalAlignment="Center"
                      FontWeight="Bold"
                      FontSize="24"
                      Foreground="#f0f0f0"
                      Grid.Row="0"
                      Margin="2">
                <TextBlock.Triggers>
                    <EventTrigger RoutedEvent="TextBlock.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="FontSize"
                                    From="26" To="20" Duration="0:0:2"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </TextBlock.Triggers>
            </TextBlock>

            <Grid MaxWidth="900">
                <StackPanel Orientation="Vertical"
                            Margin="10"
                            HorizontalAlignment="Right">

                    <Image Source="/Images/userIcon.png"
                           Width="25"
                           Height="25"/>

                    <StackPanel Orientation="Horizontal"
                                Margin="2">
                        <TextBlock Text="Welcome "
                                   FontSize="15"
                                   FontWeight="DemiBold"
                                   Foreground="#f0f0f0"/>
                        <TextBlock Text="{Binding UserName}"
                                   FontSize="15"
                                   FontWeight="DemiBold"
                                   Foreground="Black"/>
                    </StackPanel>
                </StackPanel>
                
            </Grid>

        </Grid>


        <Grid  Grid.Row="1"
              Background="{StaticResource BrushPrimary2}">
            <Grid MaxWidth="900">

                <!--
                Every RadioButton in the NavigationBar will have the same style
            -->
                <Grid.Resources>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource NavigationButtonStyle}"/>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>


                <RadioButton Grid.Column="0"
                         Content="Home"
                         Command="{Binding UpdateCurrentViewModelCommand}"
                         CommandParameter="{x:Static nav:ViewType.Home}"
                         IsChecked="{Binding CurrentViewModel, Mode=OneWay, Converter={StaticResource EqualValueToParameterConverter}, ConverterParameter=HomeViewModel}"/>
                <RadioButton Grid.Column="1"
                         Content="Portfolio"
                         Command="{Binding UpdateCurrentViewModelCommand}"
                         CommandParameter="{x:Static nav:ViewType.Portfolio}"
                         IsChecked="{Binding CurrentViewModel, Mode=OneWay, Converter={StaticResource EqualValueToParameterConverter}, ConverterParameter=PortfolioViewModel}"/>
                <RadioButton Grid.Column="2"
                         Content="Buy"
                         Command="{Binding UpdateCurrentViewModelCommand}"
                         CommandParameter="{x:Static nav:ViewType.Buy}"
                         IsChecked="{Binding CurrentViewModel, Mode=OneWay, Converter={StaticResource EqualValueToParameterConverter}, ConverterParameter=BuyViewModel}"/>
                <RadioButton Grid.Column="3"
                        Content="Sell"
                        Command="{Binding UpdateCurrentViewModelCommand}"
                        CommandParameter="{x:Static nav:ViewType.Sell}"
                        IsChecked="{Binding CurrentViewModel, Mode=OneWay, Converter={StaticResource EqualValueToParameterConverter}, ConverterParameter=SellViewModel}"/>

                <RadioButton Grid.Column="4"
                        Command="{Binding LogOutCommand}"
                        HorizontalAlignment="Right">
                    <RadioButton.Template>
                        <ControlTemplate TargetType="RadioButton">

                            <Border x:Name="BorderElement" 
                                    CornerRadius="15"
                                    BorderThickness="2"
                                    BorderBrush="White"
                                    Margin="0,0,40,0">
                                <Image Source="/Images/logOutIcon.png"
                                       Width="20"
                                       Height="20"
                                       Margin="3"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BorderElement" Property="BorderBrush" Value="{StaticResource BrushPrimary1}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </Grid>
        </Grid>

    </Grid>
</UserControl>
